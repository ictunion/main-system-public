$colors-light: (
    color1: #211d22,
    color2: #ffffff,
    color3: #4b4848,
    color4: #109AC0,
    color5: #a63ded,
    color6: #00c49f,
    color7: #FF5C93,
);

@function hexToRGB($hex) {
  @return red($hex), green($hex), blue($hex);
}

@mixin generate_colors($colors) {
  // Colors
  @each $color, $value in $colors {
    @if str-slice(#{$value}, 1, 1) == "#" {
      --#{$color}: #{$value};
    } @else {
      --#{$color}: var(--#{$value});
    }
  }

  // RGB Colors
  @each $color, $value in $colors {
    @if str-slice(#{$value}, 1, 1) == "#" {
      --rgb_#{$color}: #{hexToRGB($value)};
    } @else {
      --rgb_#{$color}: var(--rgb_#{$value});
    }
  }
}

:root {
  @include generate_colors($colors-light);
}

.root {
    display: flex;
    align-items: stretch;
    height: 100%;
    overflow: hidden;
    background: linear-gradient(233deg, rgba(35,152,168,1) 0%, rgba(0,192,213,1) 42%, rgba(35,112,168,1) 100%);
    padding-left: 6px;
}

.main-container {
    flex: 100% 1 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.app-error {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100%;
}
